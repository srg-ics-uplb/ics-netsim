package devices.routers.consoles.commands;

import devices.commands.Command;


public class PrivilegedCommand {
    public final static Command ACCESS_TEMPLATE = new Command("access-template", "Create a temporary Access-List entry");
    public final static Command ALPS = new Command("alps", "ALPS exec commands");
    public final static Command ARCHIVE = new Command("archive", "manage archive files");
    public final static Command BFE = new Command("bfe", "For manual emergency modes setting");
    public final static Command CD = new Command("cd", "Change current directory");
    public final static Command CLEAR = new Command("clear", "Reset functions");
    public final static Command CLOCK = new Command("clock", "Manage the system clock");
    public final static Command CONFIGURE = new Command("configure", "Enter configuration mode");
    public final static Command CONFIGURE_MEMORY = new Command("memory", "");
    public final static Command CONFIGURE_NETWORK = new Command("network", "");
    public final static Command CONFIGURE_TERMINAL = new Command("terminal", "");
    public final static Command COPY = new Command("copy", "Copy from one file to another");
    public final static Command DEBUG = new Command("debug", "Debugging functions (see also 'undebug')");
    public final static Command DELETE = new Command("delete", "Delete a file");
    public final static Command DIR = new Command("dir", "List files on a filesystem");
    public final static Command DISABLE = new Command("disable", "");
    public final static Command DISCONNECT = new Command("disconnect", "Disconnect an existing network connection");
    public final static Command ELOG = new Command("elog", "Event-logging control commands");
    public final static Command ERASE = new Command("erase", "Erase a filesystem");
    public final static Command EXIT = new Command("exit", "");
    public final static Command LOGOUT = new Command("logout", "Exit from the EXEC");
    public final static Command MORE = new Command("more", "Display the contents of a file");
    public final static Command MRM = new Command("mrm", "IP Multicast Routing Monitor Test");
    public final static Command NCIA = new Command("ncia", "Start/Stop NCIA Server");
    public final static Command PING = new Command("ping", "Send echo messages");
    public final static Command PWD = new Command("pwd", "Display current working directory");
    public final static Command RELOAD = new Command("reload", "Halt and perform a cold restart");
    public final static Command RESTART = new Command("restart", "Restart Connection");
    public final static Command RESUME = new Command("resume", "Resume an active network connection");
    public final static Command RSH = new Command("rsh", "Execute a remote command");
    public final static Command SEND = new Command("send", "Send a message to other tty lines");
    public final static Command SETUP = new Command("setup", "Run the SETUP command facility");
    public final static Command SDLC = new Command("sdlc", "Send SDLC test frames");
    public final static Command SHOW = new Command("show", "Show running system information");
    public final static Command SHOW_ACCESS_LISTS = new Command("access-lists", "List access lists");
    public final static Command SHOW_ARP = new Command("arp", "ARP table");
    public final static Command SHOW_CDP = new Command("cdp", "CDP information");
    public final static Command SHOW_CLASS_MAP = new Command("class-map", "Show QoS Class-Map");
    public final static Command SHOW_CLNS = new Command("clns", "CLNS network information");
    public final static Command SHOW_CLOCK = new Command("clock", "Display the system clock");
    public final static Command SHOW_COMPRESS = new Command("compress", "Show compression statistics");
    public final static Command SHOW_CONFIGURATION = new Command("configuration", "Contents of Non-Volatile memory");
    public final static Command SHOW_CONTROLLERS = new Command("controllers", "Interface controller status");
    public final static Command SHOW_CRYPTO = new Command("crypto", "Encryption module");
    public final static Command SHOW_DIALER = new Command("dialer", "Dialer parameters and statistics");
    public final static Command SHOW_FLASH = new Command("flash", "Display information about flash: file system");
    public final static Command SHOW_FRAME_RELAY = new Command("frame-relay", "Frame-Relay information");
    public final static Command SHOW_HISTORY = new Command("history", "Display the session command history");
    public final static Command SHOW_HOSTS = new Command("hosts", "IP domain-name, nameservers, and host table");
    public final static Command SHOW_INTERFACES = new Command("interfaces", "Interface status and configuration");
    public final static Command SHOW_ISDN = new Command("isdn", "ISDN information");
    public final static Command SHOW_IP = new Command("ip", "IP information");
    public final static Command SHOW_IP_ARP = new Command("arp", "IP ARP Table");
    public final static Command SHOW_IP_BGP = new Command("bgp", "BGP information");
    public final static Command SHOW_IP_DHCP = new Command("dhcp", "Show items in the DHCP database");
    public final static Command SHOW_IP_EIGRP = new Command("eigrp", "IP-EIGRP show commands");
    public final static Command SHOW_IP_INTERFACE = new Command("interface", "IP interface status and configuration");
    public final static Command SHOW_IP_INTERFACE_BRIEF = new Command("brief", "Brief summary of IP status and configuration");
    public final static Command SHOW_IP_INTERFACE_ETHERNET = new Command("ethernet", "IEEE 802.3");
    public final static Command SHOW_IP_INTERFACE_FASTETHERNET = new Command("fastethernet", "Fast IEEE 802.3");
    public final static Command SHOW_IP_INTERFACE_LOOPBACK = new Command("loopback", "Loopback interface");
    public final static Command SHOW_IP_INTERFACE_SERIAL = new Command("serial", "Serial");
    public final static Command SHOW_IP_NAT = new Command("nat", "IP NAT information");
    public final static Command SHOW_IP_OSPF = new Command("ospf", "OSPF information");
    public final static Command SHOW_IP_PROTOCOLS = new Command("protocols", "IP routing protocol process parameters");
    public final static Command SHOW_IP_ROUTE = new Command("route", "IP Routing table");
    public final static Command SHOW_ISIS = new Command("isis", "IS-IS routing information");
    public final static Command SHOW_NTP = new Command("ntp", "Network time protocol");
    public final static Command SHOW_POLICY_MAP = new Command("policy-map", "Show QoS Policy Map");
    public final static Command SHOW_PROTOCOLS = new Command("protocols", "Active network routing protocols");
    public final static Command SHOW_QUEUEING = new Command("queueing", "Show queueing configuration");
    public final static Command SHOW_RUNNING_CONFIG = new Command("running-config", "Current operating configuration");
    public final static Command SHOW_SESSIONS = new Command("sessions", "Information about Telnet connections");
    public final static Command SHOW_STARTUP_CONFIG = new Command("startup-config", "Contents of startup configuration");
    public final static Command SHOW_TERMINAL = new Command("terminal", "Display terminal configuration parameters");
    public final static Command SHOW_USERS = new Command("users", "Display information about terminal lines");
    public final static Command SHOW_VERSION = new Command("version", "System hardware and software status");
    public final static Command START_CHAT = new Command("start-chat", "Start a chat-script on a line");
    public final static Command TELNET = new Command("telnet", "Open a telnet connection");
    public final static Command TRACERT = new Command("tracert", "Trace route to destination");
    public final static Command UNDEBUG = new Command("undebug", "Disable debugging functions (see also 'debug')");
    public final static Command VERIFY = new Command("verify", "Verify a file");
    public final static Command WRITE = new Command("write", "Write running configuration to memory, network, or terminal");
}
